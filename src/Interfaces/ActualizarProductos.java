/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Clases.Persona_en_sesion;
import Clases.producto;
import Model.SqlProducto;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author w-res
 */
public class ActualizarProductos extends javax.swing.JFrame {

    File fichero;
    String ruta;
    Persona_en_sesion persona_en_sesion;
    Productos frmProductos;
    int Id_Pro;
    SqlProducto mdSqlProducto;

    /**
     * Creates new form tabla
     */
    public ActualizarProductos() {
        initComponents();
        btnGCategoria.add(jrbAudio);
        btnGCategoria.add(jrbMicro);
        btnGCategoria.add(jrbOpto);
        btnGCategoria.add(jrbVideo);
        btnGCategoria.add(jrFuentes);
        btnGCategoria.add(jrSensores);
        btnGCategoria.add(jrRobotica);
        inicia();
    }

    public ActualizarProductos(Persona_en_sesion per) {
        this.persona_en_sesion = per;
        initComponents();
        btnGCategoria.add(jrbAudio);
        btnGCategoria.add(jrbMicro);
        btnGCategoria.add(jrbOpto);
        btnGCategoria.add(jrbVideo);
        btnGCategoria.add(jrFuentes);
        btnGCategoria.add(jrSensores);
        btnGCategoria.add(jrRobotica);
        inicia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGCategoria = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtprueba = new javax.swing.JTable();
        txtTitulo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        jrbMicro = new javax.swing.JRadioButton();
        jrbOpto = new javax.swing.JRadioButton();
        jrbAudio = new javax.swing.JRadioButton();
        jrbVideo = new javax.swing.JRadioButton();
        btnRegresar = new javax.swing.JButton();
        btnCargaImg = new javax.swing.JButton();
        jrFuentes = new javax.swing.JRadioButton();
        jrSensores = new javax.swing.JRadioButton();
        jrRobotica = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Actualizar producto");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jtprueba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Titulo", "Descripcion", "Costo", "Categoria", "Cantidad", "Img"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Integer.class, java.lang.Byte.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtprueba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtpruebaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtprueba);

        txtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActionPerformed(evt);
            }
        });

        jLabel1.setText("Titulo");

        jLabel2.setText("Descripcion");

        jLabel3.setText("Costo");

        jLabel4.setText("Categoria");

        jLabel5.setText("Cantidad");

        jLabel6.setText("Imagen");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jrbMicro.setText("Microcontroladores");

        jrbOpto.setText("Optoelectronica");

        jrbAudio.setText("Audio");

        jrbVideo.setText("Video");

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnCargaImg.setText("Cargar");
        btnCargaImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargaImgActionPerformed(evt);
            }
        });

        jrFuentes.setText("Fuentes");

        jrSensores.setText("Sensores");

        jrRobotica.setText("Robotica");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRegresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCargaImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                        .addComponent(txtDescripcion))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbAudio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbVideo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbMicro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jrbOpto))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrFuentes)
                                .addGap(18, 18, 18)
                                .addComponent(jrSensores)
                                .addGap(18, 18, 18)
                                .addComponent(jrRobotica)))
                        .addContainerGap(34, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbAudio)
                            .addComponent(jrbVideo)
                            .addComponent(jrbMicro)
                            .addComponent(jrbOpto))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrFuentes)
                            .addComponent(jrSensores)
                            .addComponent(jrRobotica))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCargaImg)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegresar)
                            .addComponent(btnActualizar))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtpruebaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtpruebaMouseClicked
        mdSqlProducto = new SqlProducto();
        try {
            int fila = jtprueba.getSelectedRow();
            String nombrefila = jtprueba.getValueAt(fila, 0).toString();
            ResultSet rs;
            rs = mdSqlProducto.extraerProdalmacen(persona_en_sesion, nombrefila);
            while (rs.next()) {
                Id_Pro=rs.getInt("Id_Producto");
                txtTitulo.setText(rs.getString("Titulo"));
                txtDescripcion.setText(rs.getString("Descripcion"));
                txtCosto.setText(rs.getString("Costo"));
                txtCantidad.setText(rs.getString("Cantidad"));
                switch (rs.getInt("Categoria")) {
                    case 0:
                        jrbAudio.setSelected(true);
                        break;
                    case 1:
                        jrbVideo.setSelected(true);
                        break;
                    case 2:
                        jrbMicro.setSelected(true);
                        break;
                    case 3:
                        jrbOpto.setSelected(true);
                        break;
                    case 4:
                        jrFuentes.setSelected(true);
                        break;
                    case 5:
                        jrSensores.setSelected(true);
                        break;
                    case 6:
                        jrRobotica.setSelected(true);
                        break;
                    default:
                        break;
                }
            }
        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

    }//GEN-LAST:event_jtpruebaMouseClicked

    private void txtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        FileInputStream fis = null;
        SqlProducto mdSqlProducto = new SqlProducto();
        producto pro = new producto();
        if (verificardatos() == true && mdSqlProducto!=null) {
            if (fichero == null) {
                pro.setTitulo(txtTitulo.getText());
                pro.setDescripcion(txtDescripcion.getText());
                pro.setCosto(Float.parseFloat(txtCosto.getText()));
                if (jrbAudio.isSelected()) {
                    pro.setCategoria(0);
                } else if (jrbVideo.isSelected()) {
                    pro.setCategoria(1);
                } else if (jrbMicro.isSelected()) {
                    pro.setCategoria(2);
                } else if (jrbOpto.isSelected()) {
                    pro.setCategoria(3);
                } else if (jrFuentes.isSelected()) {
                    pro.setCategoria(4);
                } else if (jrSensores.isSelected()) {
                    pro.setCategoria(5);
                } else if (jrRobotica.isSelected()) {
                    pro.setCategoria(6);
                }
                pro.setCantidad(Integer.parseInt(txtCantidad.getText()));
                pro.setId_admin(persona_en_sesion.getId());
                if (mdSqlProducto.actualizar(pro, Id_Pro)) {
                    JOptionPane.showMessageDialog(null, "Registro actualizado");
                    limpia_con();
                    inicia();
                }
            } else {
                try {
                    fis = new FileInputStream(fichero);
                    pro.setTitulo(txtTitulo.getText());
                    pro.setDescripcion(txtDescripcion.getText());
                    pro.setCosto(Float.parseFloat(txtCosto.getText()));
                    if (jrbAudio.isSelected()) {
                        pro.setCategoria(0);
                    } else if (jrbVideo.isSelected()) {
                        pro.setCategoria(1);
                    } else if (jrbMicro.isSelected()) {
                        pro.setCategoria(2);
                    } else if (jrbOpto.isSelected()) {
                        pro.setCategoria(3);
                    } else if (jrFuentes.isSelected()) {
                        pro.setCategoria(4);
                    } else if (jrSensores.isSelected()) {
                        pro.setCategoria(5);
                    } else if (jrRobotica.isSelected()) {
                        pro.setCategoria(6);
                    }
                    pro.setImagen((int) fichero.length());
                    pro.setCantidad(Integer.parseInt(txtCantidad.getText()));
                    pro.setId_admin(persona_en_sesion.getId());
                    if (mdSqlProducto.actualizar(pro, fis, Id_Pro)) {
                        JOptionPane.showMessageDialog(null, "Registro actualizado");
                        limpia_con();
                        inicia();
                    }

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ActualizarProductos.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        fis.close();
                    } catch (IOException ex) {
                        Logger.getLogger(ActualizarProductos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe de seleccionar un producto");
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        if (frmProductos == null) {
            frmProductos = new Productos(persona_en_sesion);
            frmProductos.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCargaImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargaImgActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int seleccion = fc.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            fichero = fc.getSelectedFile();
            ruta = fichero.getAbsolutePath();
        } else {
            JOptionPane.showMessageDialog(null, "no se pudo cargar la imagen");
        }

    }//GEN-LAST:event_btnCargaImgActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (frmProductos == null) {
            frmProductos = new Productos(persona_en_sesion);
            frmProductos.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActualizarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActualizarProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCargaImg;
    private javax.swing.ButtonGroup btnGCategoria;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrFuentes;
    private javax.swing.JRadioButton jrRobotica;
    private javax.swing.JRadioButton jrSensores;
    private javax.swing.JRadioButton jrbAudio;
    private javax.swing.JRadioButton jrbMicro;
    private javax.swing.JRadioButton jrbOpto;
    private javax.swing.JRadioButton jrbVideo;
    private javax.swing.JTable jtprueba;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables

    private void inicia() {
        SqlProducto modsql = new SqlProducto();
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            jtprueba.setModel(modelo);
            ResultSet rs;
            rs = modsql.extraeralmacen(persona_en_sesion);
            ResultSetMetaData rsMD = rs.getMetaData();
            int cantidadCol = rsMD.getColumnCount();

            modelo.addColumn("Titulo");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Costo");
            modelo.addColumn("Categotia");
            modelo.addColumn("Cantidad");
            modelo.addColumn("foto");

            //int[] tamaños=nes int[];
            while (rs.next()) {
                Object[] filas = new Object[cantidadCol];
                for (int i = 0; i < cantidadCol; i++) {
                    if(i==3){
                        if(rs.getObject(i + 1).equals(0)){
                            filas[i]="Audio";
                        }
                        if(rs.getObject(i + 1).equals(1)){
                            filas[i]="Video";
                        }
                        if(rs.getObject(i + 1).equals(2)){
                            filas[i]="Microcontrolador";
                        }
                        if(rs.getObject(i + 1).equals(3)){
                            filas[i]="Optoelectronica";
                        }
                        if(rs.getObject(i + 1).equals(4)){
                            filas[i]="Fuentes";
                        }
                        if(rs.getObject(i + 1).equals(5)){
                            filas[i]="Sensores";
                        }
                        if(rs.getObject(i + 1).equals(6)){
                            filas[i]="Robotica";
                        }
                    }else{
                        filas[i] = rs.getObject(i + 1);
                    }
                    
                }
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    private void limpia_con() {
        txtTitulo.setText("");
        txtDescripcion.setText("");
        txtCosto.setText("");
        txtCantidad.setText("");
        btnGCategoria.clearSelection();
    }

    private boolean verificardatos() {
        if (txtTitulo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe de tener un titulo");
            return false;
        }
        if (txtDescripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe de tener una descripcion");
            return false;
        }
        if (txtCosto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe de tener un costo");
            return false;
        }
        if (txtCantidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe de tener una cantidad");
            return false;
        }

        return true;
    }
}
